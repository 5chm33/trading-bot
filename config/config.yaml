# Core Configuration
meta:
  version: "2.1.0"  # Added version tracking
  description: "Trading Bot Configuration"
  last_updated: "2025-03-30"  # Add current date

experimental:
  transformer_attention_vis: false
  reinforcement_reward_shaping: true

# In your config.yaml
validation:
  mode: "live"  # or "backtest"
  strict: true
  skip_if_empty: false

testing:
  use_synthetic: false  # Set to false for live trading
  synthetic_seed: 42   # For reproducible synthetic data

backtesting:
  initial_balance: 10000.0
  commission: 0.001
  slippage: 0.0005
  timeframe: "1d"
  warmup: 30  # days
  walk_forward:
    windows: 5       # Number of test periods
    train_months: 12  # Training window
    test_months: 3    # Testing window

tickers:
  primary: ["AAPL", "SPY", "GOOGL"]
  secondary: ["QQQ", "SQQQ"]  # Added alternative tickers
  watchlist: ["MSFT", "NVDA"]  # For monitoring

time_settings:
  train:
    start_date: "2021-01-01"
    end_date: "2023-01-01"
  test:
    start_date: "2023-01-01"
    end_date: "2025-01-01"
  validation:
    start_date: "2020-01-01"  # Added validation period
    end_date: "2021-01-01"
  interval: "1d"  # Options: 1m, 5m, 15m, 1h, 1d
  timezone: "America/New_York"
  market_hours:  # Added market hours
    pre_market: "04:00-09:30"
    regular: "09:30-16:00"
    post_market: "16:00-20:00"

# Enhanced Trading Parameters
trading:
  initial_balance: 10000.0
  max_steps: 1000
  max_daily_loss_pct: 0.05
  transaction_cost: 0.001
  slippage: 0.0005
  risk_free_rate: 0.02
  position_limits:
    min: -1.0
    max: 1.0
    leverage: 1.5
  lot_size: 1  # For fractional shares
  order_types:  # Added order types
    - "market"
    - "limit"
    - "stop"
  default_order_type: "limit"


brokers:
  alpaca:
    max_order_size: 10000
    order_timeout: 30
    paper: true
    api:
      key: ${ALPACA_KEY}
      secret: ${ALPACA_SECRET}
      base_url: https://paper-api.alpaca.markets

deprecations:
  metrics:
    old_system: false
    warning_level: "error"  # Can be "warning" or "error"
    removal_version: "3.0.0"

# Enhanced Data Processing
data:
  features:
    price:
      - "open"
      - "high"
      - "low"
      - "close"
    volume:
      - "volume"
      - "volume_20ma"
    indicators:
      - "rsi"
      - "macd"
      - "atr"
      - "obv"
      - "bb_width"
    derived:  # Added derived features
      - "returns_5d"
      - "returns_20d"
      - "volatility_21d"

  scaling:
    price_scaler: "MinMax"
    feature_scaler: "Robust"
    refresh_freq: "weekly"  # Added scaling refresh

  validation:
    min_data_points: 100
    test_size: 0.2
    max_null_pct: 0.05  # Added null threshold

# Enhanced Model Configuration
model:
  transformer:
    architecture:
      lookback: 30
      sequence_length: 30
      input_shape: [30, 54]
      output_dim: 6
      num_heads: 4
      dropout_rate: 0.42
      num_layers: 1
      ff_dim: 512
    regularization:
      l2_reg: 0.00077
      gradient_clip: 0.5
    training:
      batch_size: 16
      epochs: 2000
      patience: 10
      learning_rate: 0.00075
      warmup_steps: 1000  # Added warmup

  # Added model persistence
  persistence:
    save_freq: 10000  # steps
    best_model: true
    last_model: true
    history: 5  # keep last 5 models

# Enhanced RL Configuration - Finalized Version
rl:
  # ===== Hardware Configuration =====
  hardware:
    # Parallelism
    num_envs: 1
    vec_env_class: "DummyVecEnv"  # Options: "DummyVecEnv", "SubprocVecEnv"

    # GPU Management
    device: "auto"               # Moved from algorithm section
    gpu_memory_limit: 0.8        # Fraction of GPU memory (0.0-1.0)
    allow_growth: true           # Dynamic GPU allocation

  # ===== Algorithm Meta =====
  algorithm:
    name: "SAC"
    version: "1.1"
    policy: "MultiInputPolicy"
    policy_kwargs:
      net_arch:
        pi: [256, 256]
        qf: [256, 256]
    device: "auto"  # cpu/cuda/auto

  # ===== Core Training Process =====
  training:
    total_steps: 500000
    seed: 42  # Added for reproducibility

    # Execution Control
    learning_starts: 5000
    train_freq:
      frequency: 4
      unit: "step"  # "step" or "episode"
    gradient_steps: 128

    logging:
    tensorboard_dir: "logs/tensorboard"
    verbose: 1
    log_interval: 10       # Steps between logs
    save_checkpoints: true
    checkpoint_freq: 10000

  # ===== Algorithm-Specific Parameters =====
  rl:
  hyperparams:
    sac:
      buffer_size: 1000000
      batch_size: 1024
      learning_rate: 1e-4
      tau: 0.01
      gamma: 0.95
      target_update_interval: 1
      ent_coef: "auto"
      target_entropy: "auto"
      use_sde: true
      sde_sample_freq: 64
      n_critics: 2

    # Advanced
    optimize_memory_usage: true
    handle_timeout_termination: false

  # ===== Evaluation & Validation =====
  evaluation:
    freq: 10000
    n_episodes: 3
    log_path: "logs/evaluations"
    save_best: true
    deterministic: true

    metrics:
      primary: "sharpe"
      secondary: ["returns", "max_drawdown"]

  # ===== Safety Controls =====
  early_stopping:
    enabled: true
    metric: "sharpe"
    direction: "max"  # maximize
    patience: 5
    min_episodes: 20
    threshold: 1.5

  checkpointing:
    save_freq: 10000
    keep_last: 3
    save_replay_buffer: true

  # ===== Experimental Features =====
  experimental:
    hyperparameter_tuning:
      enabled: false
      params: ["learning_rate", "batch_size"]
      ranges:
        learning_rate: [1e-5, 1e-3]
        batch_size: [64, 512]

    distributed:
      enabled: false
      num_workers: 4

# Enhanced Technical Indicators
indicators:
  windows:
    default: 14
    short: 5
    medium: 20
    long: 50

  rsi:
    window: 14
    overbought: 70  # Adjusted to standard
    oversold: 30

  moving_averages:
    sma: [5, 10, 20, 50, 200]  # Added 200
    ema: [10, 20, 50, 100, 200]

  macd:
    fast: 12  # Standard values
    slow: 26
    signal: 9

  bollinger:
    window: 20
    std_dev: 2

  atr:
    window: 14

  volume:
    ma_windows: [20, 50]
    obv: true

  momentum:  # Added momentum
    roc: [5, 10, 20]
    williams: 14

# Enhanced Risk Management
risk:
  max_drawdown: 0.20
  daily_loss_limit: 0.05  # Added explicit daily
  position_limits:
    single: 0.25  # Max per position
    sector: 0.4  # Max per sector
    portfolio: 1.5  # Max gross exposure

  stop_loss:
    enabled: true
    trailing: 0.03
    hard: 0.10  # Added hard stop

  take_profit:
    enabled: true
    ratio: 0.1
    trailing: 0.05  # Added trailing

  volatility_adjustment:
    enabled: true
    atr_window: 14  # Use 14-day ATR
    risk_per_trade: 0.01  # Risk 1% per trade

# Enhanced Reward Structure
reward:
  components:
    returns: 0.6  # Adjusted weights
    sharpe: 0.3
    sortino: 0.2  # Added Sortino ratio
    drawdown: 0.1
    turnover: -0.01  # Penalize churn

  scaling:
    clip: [-2.0, 2.0]
    normalization: "rolling"  # Added normalization
    window: 100

# Enhanced API Configuration
apis:
  alpaca:
    key: ${ALPACA_KEY}
    secret: ${ALPACA_SECRET}
    base_url: "https://paper-api.alpaca.markets"
    paper: true
    retries: 3  # Added retry policy
    timeout: 10

  polygon:  # Added Polygon
    key: ${POLYGON_KEY}
    realtime: true

  newsapi:
    key: ${NEWSAPI_KEY}
    sources: ["bloomberg", "reuters"]

  data_feed: "alpaca"  # Primary data source

# Enhanced Execution Parameters
execution:
  mode: "paper"  # paper/live
  device: "cuda"
  gpu:
    memory_limit: 0.8  # Use 80% of GPU memory
    allow_growth: true  # Dynamic GPU allocation
  parallelism:
    data_loading: true
    num_workers: 4  # Adjusted
    prefetch_factor: 2

  latency:  # Added latency controls
    max_order: 500  # ms
    max_data: 1000

  fallback:  # Added fallback
    enabled: true
    data_source: "yfinance"

# Enhanced Logging
logging:
  level: "INFO"
  format: "%(asctime)s | %(name)s | %(levelname)s | %(message)s"

  file:
    enabled: true
    path: "logs/trading_bot.log"
    max_size: 10
    backups: 3
    compress: true  # Added compression

  console:
    enabled: true
    colors: true

  metrics:  # Added metrics logging
    portfolio: true
    positions: true
    risk: true
    freq: "daily"

monitoring:
  prometheus:
    enabled: true
    port: 8000
  healthchecks:
    enabled: true
    url: ${HEALTHCHECK_URL}

notifications:
  email:
    enabled: false
    recipients: []
  slack:
    enabled: true
    webhook: ${SLACK_WEBHOOK}
  alerts:  # Added alert thresholds
    drawdown: 0.15
    position: 0.2
    volatility: 0.3
